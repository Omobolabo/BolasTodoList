{"version":3,"sources":["components/Form.js","components/FilterButton.js","components/Todo.js","App.js","index.js"],"names":["Form","props","_useState","useState","_useState2","Object","slicedToArray","name","setName","react_default","a","createElement","onSubmit","e","preventDefault","addTask","className","htmlFor","type","id","autoComplete","value","onChange","target","FilterButton","aria-pressed","isPressed","onClick","setFilter","Todo","isEditing","setEditing","_useState3","_useState4","newName","setNewName","editFieldRef","useRef","editButtonRef","wasEditing","ref","useEffect","current","usePrevious","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","keys","App","filter","tasks","setTasks","updatedTasks","map","objectSpread","remainingTasks","editedTaskList","taskList","key","filterList","components_FilterButton","tasksNoun","length","headingText","concat","listHeadingRef","prevTaskLength","components_Form","newTask","nanoid","toConsumableArray","tabIndex","role","aria-labelledby","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.6b4dc56b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nfunction Form(props) {\r\n  const [name, setName] = useState(\"\")\r\n\r\n  function handleChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setName(\"\");\r\n    if(name === \"\") {\r\n     return;\r\n     }else{\r\n      props.addTask(name);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2 className=\"label-wrapper\">\r\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n          What needs to be done?\r\n        </label>\r\n      </h2>\r\n      <input\r\n        type=\"text\"\r\n        id=\"new-todo-input\"\r\n        className=\"input input__lg\"\r\n        name=\"text\"\r\n        autoComplete=\"off\"\r\n        value={name}\r\n        onChange={handleChange}\r\n      />\r\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nfunction FilterButton(props) {\r\n  return (\r\n    <button type=\"button\" className=\"btn toggle-btn\" aria-pressed={props.isPressed} onClick={() => props.setFilter(props.name)}>\r\n      <span className=\"visually-hidden\">Show </span>\r\n      <span>{props.name}</span>\r\n      <span className=\"visually-hidden\"> tasks</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default FilterButton;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\nexport default function Todo(props) {\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState('');\r\n  const editFieldRef = useRef(null);\r\n  const editButtonRef = useRef(null);\r\n\r\n  const wasEditing = usePrevious(isEditing);\r\n\r\n  function handleChange(e) {\r\n    setNewName(e.target.value);\r\n  }\r\n \r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.editTask(props.id, newName);\r\n    setNewName(\"\");\r\n    setEditing(false);\r\n  }\r\n  \r\n  const editingTemplate = (\r\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          New name for {props.name}\r\n        </label>\r\n        <input id={props.id} className=\"todo-text\" type=\"text\" value={newName} onChange={handleChange} ref={editFieldRef}/>\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button type=\"button\" className=\"btn todo-cancel\" onClick={() => setEditing(false)}>\r\n          Cancel\r\n          <span className=\"visually-hidden\">renaming {props.name}</span>\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n          Save\r\n          <span className=\"visually-hidden\">new name for {props.name}</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n  const viewTemplate = (\r\n    <div className=\"stack-small\">\r\n      <div className=\"c-cb\">\r\n          <input\r\n            id={props.id}\r\n            type=\"checkbox\"\r\n            defaultChecked={props.completed}\r\n            onChange={() => props.toggleTaskCompleted(props.id)}\r\n          />\r\n          <label className=\"todo-label\" htmlFor={props.id}>\r\n            {props.name}\r\n          </label>\r\n        </div>\r\n        <div className=\"btn-group\">\r\n          <button type=\"button\" className=\"btn\" onClick={() => setEditing(true)} ref={editButtonRef}>\r\n            Edit <span className=\"visually-hidden\">{props.name}</span>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn__danger\"\r\n            onClick={() => props.deleteTask(props.id)}\r\n          >\r\n            Delete <span className=\"visually-hidden\">{props.name}</span>\r\n          </button>\r\n        </div>\r\n    </div>\r\n  );\r\n  useEffect(() => {\r\n    if (!wasEditing && isEditing) {\r\n      editFieldRef.current.focus();\r\n    }\r\n    if (wasEditing && !isEditing) {\r\n      editButtonRef.current.focus();\r\n    }\r\n  }, [wasEditing, isEditing]);  \r\n\r\n    return (\r\n     <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}\r\n     </li>\r\n    );\r\n  }\r\n  ","import React, { useState, useRef, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: (task) => !task.completed,\n  Completed: (task) => task.completed\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [filter, setFilter] = useState('All');\n  const [tasks, setTasks] = useState(props.tasks);\n  function addTask(name) {\n\n    const newTask = { id: `todo-${nanoid()}`, name, completed: false };\n    setTasks([...tasks, newTask]);\n  } \n  \nfunction toggleTaskCompleted(id) {\n  const updatedTasks = tasks.map((task) => {\n  \n    if (id === task.id) {\n    \n      return {...task, completed: !task.completed}\n    }\n    return task;\n  });\n  setTasks(updatedTasks);\n}\n\nfunction deleteTask(id) {\n  const remainingTasks = tasks.filter((task) => id !== task.id);\n  setTasks(remainingTasks);\n}\n\nfunction editTask(id, newName) {\n  const editedTaskList = tasks.map((task) => {\n\n    if (id === task.id) {\n      //\n      return {...task, name: newName}\n    }\n    return task;\n  });\n  setTasks(editedTaskList);\n}\n\n  const taskList = tasks.filter(FILTER_MAP[filter]).map((task) => (\n    <Todo id={task.id} name={task.name} completed={task.completed} key={task.id} toggleTaskCompleted={toggleTaskCompleted} deleteTask={deleteTask} editTask={editTask} />\n  ));\n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton key={name} name={name} isPressed={name === filter} setFilter={setFilter}/>\n  ));  \n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  \n  const listHeadingRef = useRef(null);\n\n  const prevTaskLength = usePrevious(tasks.length);\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);  \n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>Bolabo's list</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n      {filterList}\n      </div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>{headingText}</h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nconst DATA = [\n  { id: \"todo-0\", name: \"Eat\", completed: true },\n  { id: \"todo-1\", name: \"Sleep\", completed: false },\n  { id: \"todo-2\", name: \"Repeat\", completed: false }\n];\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App tasks={DATA} />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}